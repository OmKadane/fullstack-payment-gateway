{"ast":null,"code":"var _jsxFileName = \"/Users/shdc/Desktop/fullstack-payment-gateway/frontend/src/CheckoutForm.js\",\n  _s = $RefreshSig$();\n// src/CheckoutForm.js\n\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios'; // Make sure you have axios installed (npm install axios)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(false);\n  const [succeeded, setSucceeded] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setProcessing(true);\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      return;\n    }\n    try {\n      // 1. Call your backend to create the PaymentIntent\n      const response = await axios.post('http://127.0.0.1:8000/api/v1/payments/create-checkout-session/');\n      const {\n        clientSecret\n      } = response.data;\n\n      // 2. Confirm the card payment with the clientSecret\n      const result = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement)\n        }\n      });\n      if (result.error) {\n        // Show error to your customer\n        setError(`Payment failed: ${result.error.message}`);\n        setProcessing(false);\n      } else {\n        // The payment has been processed!\n        if (result.paymentIntent.status === 'succeeded') {\n          setError(null);\n          setProcessing(false);\n          setSucceeded(true);\n          console.log('Payment successful!', result.paymentIntent);\n        }\n      }\n    } catch (error) {\n      setError('An unexpected error occurred.');\n      setProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      width: '400px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {\n      options: {\n        style: {\n          base: {\n            fontSize: '16px'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: processing || succeeded,\n      style: {\n        marginTop: '20px',\n        width: '100%',\n        padding: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: processing ? 'Processing...' : 'Pay Now'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), succeeded && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'green',\n        marginTop: '10px'\n      },\n      children: \"Payment succeeded!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"/1FXBerNWoc+yf52U3G9a6J2J+E=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","axios","jsxDEV","_jsxDEV","CheckoutForm","_s","stripe","elements","error","setError","processing","setProcessing","succeeded","setSucceeded","handleSubmit","event","preventDefault","response","post","clientSecret","data","result","confirmCardPayment","payment_method","card","getElement","message","paymentIntent","status","console","log","onSubmit","style","width","children","options","base","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","disabled","marginTop","padding","color","_c","$RefreshReg$"],"sources":["/Users/shdc/Desktop/fullstack-payment-gateway/frontend/src/CheckoutForm.js"],"sourcesContent":["// src/CheckoutForm.js\n\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios'; // Make sure you have axios installed (npm install axios)\n\nconst CheckoutForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(false);\n  const [succeeded, setSucceeded] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setProcessing(true);\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      return;\n    }\n\n    try {\n      // 1. Call your backend to create the PaymentIntent\n      const response = await axios.post('http://127.0.0.1:8000/api/v1/payments/create-checkout-session/');\n      const { clientSecret } = response.data;\n\n      // 2. Confirm the card payment with the clientSecret\n      const result = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement),\n        },\n      });\n\n      if (result.error) {\n        // Show error to your customer\n        setError(`Payment failed: ${result.error.message}`);\n        setProcessing(false);\n      } else {\n        // The payment has been processed!\n        if (result.paymentIntent.status === 'succeeded') {\n          setError(null);\n          setProcessing(false);\n          setSucceeded(true);\n          console.log('Payment successful!', result.paymentIntent);\n        }\n      }\n    } catch (error) {\n      setError('An unexpected error occurred.');\n      setProcessing(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ width: '400px' }}>\n      <CardElement options={{ style: { base: { fontSize: '16px' } } }} />\n      <button disabled={processing || succeeded} style={{ marginTop: '20px', width: '100%', padding: '10px' }}>\n        <span>{processing ? 'Processing...' : 'Pay Now'}</span>\n      </button>\n\n      {/* Show any error that happens when processing the payment */}\n      {error && <div style={{ color: 'red', marginTop: '10px' }}>{error}</div>}\n\n      {/* Show a success message upon completion */}\n      {succeeded && <div style={{ color: 'green', marginTop: '10px' }}>Payment succeeded!</div>}\n    </form>\n  );\n};\n\nexport default CheckoutForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}